% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NetworkAnalysis.R
\name{Analyser}
\alias{Analyser}
\title{Get an of the omop databse analyser}
\description{
Get an of the omop databse analyser

Get an of the omop databse analyser
}
\examples{

## ------------------------------------------------
## Method `Analyser$countAncestorConcepts`
## ------------------------------------------------

omop = Omop$new(...)
s = omop$searcher
s$findConcepts("\%myoc\%infarc\%") \%>\% s$expandAncestorConcepts()
s$findConceptByCode("SNOMED","239913004") \%>\% s$expandAncestorConcepts()

## ------------------------------------------------
## Method `Analyser$calculateTfidf`
## ------------------------------------------------

omop = Omop$new(...)
a = Analyser$new(omop)
df = ... get all concepts from a set of documents
groupedDf = df \%>\% group_by(note_id) # or could be (person_id)
groupedDf \%>\% 
  a$countAncestorConcepts() \%>\%  # get all ancestor concepts and counts by group (optional step)
  a$calculateTfidf() # a groupedDf with each concept_id per group and different tfidf stats

## ------------------------------------------------
## Method `Analyser$loadGraph`
## ------------------------------------------------

omop = Omop$new(...)
a = Searcher$new(omop)
a = Analyser$new(omop)
df = s$findConceptByCode("SNOMED","239913004") \%>\% 
  a$countAncestorConcepts() \%>\%
  a$loadGraph()

## ------------------------------------------------
## Method `Analyser$plotConceptNetwork`
## ------------------------------------------------

omop = Omop$new(...)
s = Searcher$new(omop)
a = Analyser$new(omop)
df = s.search("\%myoc\%inf\%") 
#... a list of concept_ids, optionally grouped and optionally with a count column...
df \%>\% 
  a$countAncestorConcepts() \%>\%
  a$loadGraph()
a$plotConceptNetwork()
}
\keyword{omop}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{omop}}{the omop connection}

\item{\code{graph}}{a tidygraph object}

\item{\code{graph}}{a tidygraph object}

\item{\code{graph}}{a tidygraph object}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Analyser$new()}}
\item \href{#method-countAncestorConcepts}{\code{Analyser$countAncestorConcepts()}}
\item \href{#method-calculateTfidf}{\code{Analyser$calculateTfidf()}}
\item \href{#method-loadGraph}{\code{Analyser$loadGraph()}}
\item \href{#method-plotConceptNetwork}{\code{Analyser$plotConceptNetwork()}}
\item \href{#method-plotSankeyD3}{\code{Analyser$plotSankeyD3()}}
\item \href{#method-print}{\code{Analyser$print()}}
\item \href{#method-clone}{\code{Analyser$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
create a vocabulary searcher
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Analyser$new(omop)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{omop}}{an R6 Omop object}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-countAncestorConcepts"></a>}}
\subsection{Method \code{countAncestorConcepts()}}{
get ancestors for a grouped set of concepts preserving grouping and count information
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Analyser$countAncestorConcepts(groupedDf)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{groupedDf}}{a dataframe with a concept_id field}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
an expanded data.frame of concepts expanded to include all ancestors which maybe duplicated
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{omop = Omop$new(...)
s = omop$searcher
s$findConcepts("\%myoc\%infarc\%") \%>\% s$expandAncestorConcepts()
s$findConceptByCode("SNOMED","239913004") \%>\% s$expandAncestorConcepts()
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-calculateTfidf"></a>}}
\subsection{Method \code{calculateTfidf()}}{
get an inverse document frequency for concepts associated with a grouping
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Analyser$calculateTfidf(groupedDf)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{groupedDf}}{a dataframe with a concept_id field and at least one group_by active defining the "document"}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
The grouping here acts as a "Document" from the perpective of the calculation but might be a person

TODO: allow this to take an idf derived from the whole corpus
}

\subsection{Returns}{
an expanded data.frame of concepts expanded to include tfidf stats for each concept in each group
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{omop = Omop$new(...)
a = Analyser$new(omop)
df = ... get all concepts from a set of documents
groupedDf = df \%>\% group_by(note_id) # or could be (person_id)
groupedDf \%>\% 
  a$countAncestorConcepts() \%>\%  # get all ancestor concepts and counts by group (optional step)
  a$calculateTfidf() # a groupedDf with each concept_id per group and different tfidf stats
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-loadGraph"></a>}}
\subsection{Method \code{loadGraph()}}{
get all the is-a relationships connecting a list of nodes
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Analyser$loadGraph(df)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{df}}{a dataframe with a set of concept_ids representing the node list}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the networkAnalysis object with a graph loaded
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{omop = Omop$new(...)
a = Searcher$new(omop)
a = Analyser$new(omop)
df = s$findConceptByCode("SNOMED","239913004") \%>\% 
  a$countAncestorConcepts() \%>\%
  a$loadGraph()
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plotConceptNetwork"></a>}}
\subsection{Method \code{plotConceptNetwork()}}{
plot the currently loaded graph.
TODO: facet plot on different scoreVars
TODO: make layout fixed for multiple graphs: https://github.com/thomasp85/ggraph/issues/130
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Analyser$plotConceptNetwork(scoreVar = "count", labelScore = 1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{scoreVar}}{a node feature the the graph will use as e.g.count, norm_okapi_bm25,}

\item{\code{labelSore}}{a percentage of score that will trigger a node being labelled}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the networkAnalysis object with a graph loaded
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{omop = Omop$new(...)
s = Searcher$new(omop)
a = Analyser$new(omop)
df = s.search("\%myoc\%inf\%") 
#... a list of concept_ids, optionally grouped and optionally with a count column...
df \%>\% 
  a$countAncestorConcepts() \%>\%
  a$loadGraph()
a$plotConceptNetwork()
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plotSankeyD3"></a>}}
\subsection{Method \code{plotSankeyD3()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Analyser$plotSankeyD3(linkWeightVar = "weight")}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Analyser$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Analyser$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
