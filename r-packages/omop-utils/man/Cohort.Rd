% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Cohort.R
\name{Cohort}
\alias{Cohort}
\title{Get a searcher of the omop databse}
\description{
Get a searcher of the omop databse

Get a searcher of the omop databse
}
\examples{
search = Searcher$new(omop)
}
\keyword{omop}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{omop}}{the omop connection}

\item{\code{cohort}}{the filtered cohort as a dataframe}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Cohort$new()}}
\item \href{#method-withConceptSetFilter}{\code{Cohort$withConceptSetFilter()}}
\item \href{#method-withValueFilter}{\code{Cohort$withValueFilter()}}
\item \href{#method-withConceptAndValueFilter}{\code{Cohort$withConceptAndValueFilter()}}
\item \href{#method-withFilter}{\code{Cohort$withFilter()}}
\item \href{#method-getCohortVariables}{\code{Cohort$getCohortVariables()}}
\item \href{#method-withGender}{\code{Cohort$withGender()}}
\item \href{#method-compute}{\code{Cohort$compute()}}
\item \href{#method-get}{\code{Cohort$get()}}
\item \href{#method-save}{\code{Cohort$save()}}
\item \href{#method-load}{\code{Cohort$load()}}
\item \href{#method-print}{\code{Cohort$print()}}
\item \href{#method-clone}{\code{Cohort$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
create a cohort builder
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cohort$new(omop, name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{omop}}{an R6 Omop object}

\item{\code{name}}{a very short description of the cohort}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-withConceptSetFilter"></a>}}
\subsection{Method \code{withConceptSetFilter()}}{
apply filter to cohort that allows requires stated field is one from a range of concepts
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cohort$withConceptSetFilter(personDf, conceptIdField, conceptDf)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{personDf}}{a dataframe with a person_id field and a ???_concept_id field, optionally grouped by columns that may be needed for further filtering}

\item{\code{conceptIdField}}{a dataframe with a concept_id field}

\item{\code{conceptDf}}{a dataframe with a concept_id field holding concepts}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the builder with a cohort filtered and augmented with any additional fields from the person_df groups
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-withValueFilter"></a>}}
\subsection{Method \code{withValueFilter()}}{
apply filter to cohort that requires stated field is of specific value (which may be a concept id)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cohort$withValueFilter(personDf, valueExpr)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{personDf}}{a dataframe with a person_id field and a ???_concept_id field, optionally grouped by columns that may be needed for further filtering}

\item{\code{valueExpr}}{a standard dplyr filter expression}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the builder with a cohort filtered and augmented with any additional fields from the person_df groups
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-withConceptAndValueFilter"></a>}}
\subsection{Method \code{withConceptAndValueFilter()}}{
apply filter to cohort that requires stated field is of specific value (which may be a concept id)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cohort$withConceptAndValueFilter(
  personDf,
  conceptIdField,
  conceptDf,
  valueExpr
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{personDf}}{a dataframe with a person_id field and a ???_concept_id field, optionally grouped by columns that may be needed for further filtering}

\item{\code{conceptIdField}}{a dataframe with a concept_id field}

\item{\code{conceptDf}}{a dataframe with a concept_id field holding concepts}

\item{\code{valueExpr}}{a standard dplyr filter expression}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the builder with a cohort filtered and augmented with any additional fields from the person_df groups
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-withFilter"></a>}}
\subsection{Method \code{withFilter()}}{
apply filter to cohort itself
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cohort$withFilter(filterExpr)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{filterExpr}}{a filter expression as expected by dplyr::filter}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getCohortVariables"></a>}}
\subsection{Method \code{getCohortVariables()}}{
determine the column names in the cohort (which may change after lots of filtering)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cohort$getCohortVariables()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
the columns of the cohort (as a list of symbols)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-withGender"></a>}}
\subsection{Method \code{withGender()}}{
filter the
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cohort$withGender(gender)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{gender}}{a M or F value}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the columns of the cohort (as a list of symbols)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-compute"></a>}}
\subsection{Method \code{compute()}}{
execute a dplyr::compute
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cohort$compute()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get"></a>}}
\subsection{Method \code{get()}}{
execute a dplyr::compute and
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cohort$get()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
the cohort as a data frame
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-save"></a>}}
\subsection{Method \code{save()}}{
saves the data locally
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cohort$save(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{the name of the file - initial part of path}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-load"></a>}}
\subsection{Method \code{load()}}{
loads the data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cohort$load(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{the name of the file - initial part of path}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\subsection{Method \code{print()}}{
print the cohort name as size
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cohort$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cohort$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
