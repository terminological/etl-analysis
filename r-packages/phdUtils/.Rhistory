tmpHux <- merge_cells(tmpHux, l:r, 1)
tmpHux <- tmpHux %>% set_top_border(l, everywhere, 1)
}
}
mergeCells(htTop5ByAuthorCommunity)
htTop5ByAuthorCommunity <- defaultLayout(as_huxtable(top5ByAuthorCommunity, add_colnames = TRUE)) %>%
set_align(1, 3, 'right') %>%
set_align(everywhere, 1, 'left') %>%
set_width("400pt") %>%
set_col_width(c(.1, .7, .2)) %>%
set_caption('Top 5 articles by author community')
mergeCells = function(hux) {
tmpHux = hux
for (tt in unique(hux[[1]][-1])) {
print(hux[[1]])
tmp = seq(1,length(hux[[1]][-1])+1)
print(tmp)
l = min(tmp[hux[[1]] == tt])
print(l)
r = max(tmp[hux[[1]] == tt])
print(r)
tmpHux <- merge_cells(tmpHux, l:r, 1)
tmpHux <- tmpHux %>% set_top_border(l, everywhere, 1)
}
}
htTop5ByAuthorCommunity <- mergeCells(htTop5ByAuthorCommunity)
quick_html(htTop5ByTopic, file="~/Dropbox/litReview/output/top5RefsByTopic.html")
quick_html(htTop5ByAuthorCommunity, file="~/Dropbox/litReview/output/top5RefsByAuthorCommunity.html")
mergeCells = function(hux) {
tmpHux = hux
for (tt in unique(hux[[1]][-1])) {
print(hux[[1]])
tmp = seq(1,length(hux[[1]][-1])+1)
print(tmp)
l = min(tmp[hux[[1]] == tt])
print(l)
r = max(tmp[hux[[1]] == tt])
print(r)
tmpHux <- merge_cells(tmpHux, l:r, 1)
tmpHux <- tmpHux %>% set_top_border(l, everywhere, 1)
}
return(tmpHux)
}
htTop5ByAuthorCommunity <- mergeCells(htTop5ByAuthorCommunity)
quick_html(htTop5ByAuthorCommunity, file="~/Dropbox/litReview/output/top5RefsByAuthorCommunity.html")
htTop5ByAuthorCommunity <- defaultLayout(as_huxtable(top5ByAuthorCommunity, add_colnames = TRUE)) %>%
set_align(1, 3, 'right') %>%
set_align(everywhere, 1, 'left') %>%
set_width("400pt") %>%
set_col_width(c(.1, .7, .2)) %>%
set_caption('Top 5 articles by author community')
mergeCells = function(hux) {
tmpHux = hux
for (tt in unique(hux[[1]][-1])) {
print(hux[[1]])
tmp = seq(1,length(hux[[1]][-1])+1)
print(tmp)
l = min(tmp[hux[[1]] == tt])
print(l)
r = max(tmp[hux[[1]] == tt])
print(r)
tmpHux <- merge_cells(tmpHux, l:r, 1)
tmpHux <- tmpHux %>% set_top_border(l, everywhere, 1)
}
return(tmpHux)
}
htTop5ByAuthorCommunity <- mergeCells(htTop5ByAuthorCommunity)
quick_html(htTop5ByAuthorCommunity, file="~/Dropbox/litReview/output/top5RefsByAuthorCommunity.html")
authorCommunityByMember <- getAuthorCommunityLabels %>%
mutate(community = authorCommunity) %>%
left_join(getAuthorCoauthorHarmonicCentrality) %>%
mutate(name = paste0(lastName,", ",firstName)) %>%
# mutate(affiliation = str_trunc(affiliation,50,"right")) %>%
mutate(affiliation = str_extract(affiliation, "([^,]+,[^,]+)|([^,]*)")) %>%
group_by(label) %>% top_n(5,pagerank) %>%
arrange(desc(pagerank), .by_group = TRUE) %>%
select(community = label, name, affiliation, pagerank)
htAuthorsByCommunity <- defaultLayout(as_huxtable(authorCommunityByMember, add_colnames = TRUE)) %>%
set_align(1, 4, 'right') %>%
set_col_width(c(.1, .3, .5, .1)) %>%
set_caption('Top 5 pageranked researchers in community')
htAuthorsByCommunity = mergeCells(htAuthorsByCommunity)
quick_html(htAuthorsByCommunity, file="~/Dropbox/litReview/output/top5AuthorsByCommunity.html")
mergeCells = function(hux) {
tmpHux = hux
for (tt in unique(hux[[1]][-1])) {
tmp = seq(1,length(hux[[1]][-1])+1)
l = min(tmp[hux[[1]] == tt])
r = max(tmp[hux[[1]] == tt])
tmpHux <- merge_cells(tmpHux, l:r, 1)
tmpHux <- tmpHux %>% set_top_border(l, everywhere, 1)
}
return(tmpHux)
}
top5ByArticleGroup <- getArticlesByPagerank %>%
mutate(articleGroup=articleCommunity) %>%
inner_join(getArticleGroupLabels, by="articleGroup") %>%
group_by(articleGroup) %>%
top_n(5,pagerank) %>%
arrange(desc(pagerank), .by_group = TRUE) %>%
mutate(reference = sub("\\[[0-9]+\\]","",node)) %>%
select(articleGroup,reference,pagerank)
htTop5ByArticleGroup <- defaultLayout(as_huxtable(top5ByArticleGroup, add_colnames = TRUE)) %>%
set_align(1, 3, 'right') %>%
set_align(everywhere, 1, 'left') %>%
set_width("400pt") %>%
set_col_width(c(.1, .7, .2)) %>%
set_caption('Top 5 articles by articleGroup')
htTop5ByAuthorCommunity <- mergeCells(htTop5ByAuthorCommunity)
quick_html(htTop5ByArticleGroup, file="~/Dropbox/litReview/output/top5RefsByArticleGroup.html")
top5ByArticleGroup <- getArticlesByPagerank %>%
mutate(articleGroup=articleCommunity) %>%
inner_join(getArticleGroupLabels, by="articleGroup") %>%
group_by(articleGroup) %>%
top_n(5,pagerank) %>%
arrange(desc(pagerank), .by_group = TRUE) %>%
mutate(
reference = sub("\\[[0-9]+\\]","",node),
articleGroup = label
) %>%
select(articleGroup,reference,pagerank)
top5ByArticleGroup <- getArticlesByPagerank %>%
mutate(articleGroup=articleCommunity) %>%
inner_join(getArticleGroupLabels, by="articleGroup") %>%
mutate(articleGroup = label) %>%
group_by(articleGroup) %>%
top_n(5,pagerank) %>%
arrange(desc(pagerank), .by_group = TRUE) %>%
mutate(reference = sub("\\[[0-9]+\\]","",node)) %>%
select(articleGroup,reference,pagerank)
htTop5ByArticleGroup <- defaultLayout(as_huxtable(top5ByArticleGroup, add_colnames = TRUE)) %>%
set_align(1, 3, 'right') %>%
set_align(everywhere, 1, 'left') %>%
set_width("400pt") %>%
set_col_width(c(.1, .7, .2)) %>%
set_caption('Top 5 articles by articleGroup')
htTop5ByArticleGroup <- mergeCells(htTop5ByArticleGroup)
quick_html(htTop5ByArticleGroup, file="~/Dropbox/litReview/output/top5RefsByArticleGroup.html")
top5ByArticleGroup <- getArticlesByPagerank %>%
mutate(articleGroup=articleCommunity) %>%
inner_join(getArticleGroupLabels, by="articleGroup") %>%
mutate(articleGroup = label) %>%
group_by(articleGroup) %>%
top_n(5,pagerank) %>%
filter(row_number() < 5)
arrange(desc(pagerank), .by_group = TRUE) %>%
mutate(reference = sub("\\[[0-9]+\\]","",node)) %>%
select(articleGroup,reference,pagerank)
htTop5ByArticleGroup <- defaultLayout(as_huxtable(top5ByArticleGroup, add_colnames = TRUE)) %>%
set_align(1, 3, 'right') %>%
set_align(everywhere, 1, 'left') %>%
set_width("400pt") %>%
set_col_width(c(.1, .7, .2)) %>%
set_caption('Top 5 articles by articleGroup')
htTop5ByArticleGroup <- mergeCells(htTop5ByArticleGroup)
quick_html(htTop5ByArticleGroup, file="~/Dropbox/litReview/output/top5RefsByArticleGroup.html")
top5ByArticleGroup <- getArticlesByPagerank %>%
mutate(articleGroup=articleCommunity) %>%
inner_join(getArticleGroupLabels, by="articleGroup") %>%
mutate(articleGroup = label) %>%
group_by(articleGroup) %>%
top_n(5,pagerank) %>%
filter(row_number() < 5) %>%
arrange(desc(pagerank), .by_group = TRUE) %>%
mutate(reference = sub("\\[[0-9]+\\]","",node)) %>%
select(articleGroup,reference,pagerank)
htTop5ByArticleGroup <- defaultLayout(as_huxtable(top5ByArticleGroup, add_colnames = TRUE)) %>%
set_align(1, 3, 'right') %>%
set_align(everywhere, 1, 'left') %>%
set_width("400pt") %>%
set_col_width(c(.1, .7, .2)) %>%
set_caption('Top 5 articles by articleGroup')
htTop5ByArticleGroup <- mergeCells(htTop5ByArticleGroup)
quick_html(htTop5ByArticleGroup, file="~/Dropbox/litReview/output/top5RefsByArticleGroup.html")
top5ByAuthorCommunity <- getAuthorCommunityArticles %>%
mutate(authorCommunity=community) %>%
inner_join(getAuthorCommunityLabels, by="authorCommunity") %>%
mutate(nodeId=articleId, community=label) %>%
left_join(getArticlesByPagerank, by="nodeId") %>% group_by(community) %>%
mutate(pagerank = pagerank.x) %>%
top_n(5,pagerank) %>%
filter(row_number() < 6) %>%
arrange(desc(pagerank), .by_group = TRUE) %>%
mutate(reference = sub("\\[[0-9]+\\]","",node)) %>%
select(community,reference,pagerank)
htTop5ByAuthorCommunity <- defaultLayout(as_huxtable(top5ByAuthorCommunity, add_colnames = TRUE)) %>%
set_align(1, 3, 'right') %>%
set_align(everywhere, 1, 'left') %>%
set_width("400pt") %>%
set_col_width(c(.1, .7, .2)) %>%
set_caption('Top 5 articles by author community')
htTop5ByAuthorCommunity <- mergeCells(htTop5ByAuthorCommunity)
quick_html(htTop5ByAuthorCommunity, file="~/Dropbox/litReview/output/top5RefsByAuthorCommunity.html")
top5ByArticleGroup <- getArticlesByPagerank %>%
mutate(articleGroup=articleCommunity) %>%
inner_join(getArticleGroupLabels, by="articleGroup") %>%
mutate(articleGroup = label) %>%
group_by(articleGroup) %>%
top_n(5,pagerank) %>%
filter(row_number() < 6) %>%
arrange(desc(pagerank), .by_group = TRUE) %>%
mutate(reference = sub("\\[[0-9]+\\]","",node)) %>%
select(articleGroup,reference,pagerank)
htTop5ByArticleGroup <- defaultLayout(as_huxtable(top5ByArticleGroup, add_colnames = TRUE)) %>%
set_align(1, 3, 'right') %>%
set_align(everywhere, 1, 'left') %>%
set_width("400pt") %>%
set_col_width(c(.1, .7, .2)) %>%
set_caption('Top 5 articles by articleGroup')
htTop5ByArticleGroup <- mergeCells(htTop5ByArticleGroup)
quick_html(htTop5ByArticleGroup, file="~/Dropbox/litReview/output/top5RefsByArticleGroup.html")
plotArticlesByPagerank_DatePagerank <- ggplot(getArticlesByPagerank, aes(x=as.Date(date),y=pagerank))+
geom_point()+
xlab("date")+ylab("pagerank")+
geom_smooth(method='lm')+
coord_cartesian(xlim = as.Date(c('2005-01-01', '2019-01-01')))
plotArticlesByPagerank_DatePagerank
plotArticlesByPagerank_DatePagerank <- ggplot(getArticlesByPagerank, aes(x=as.Date(date),y=pagerank))+
geom_point()+
xlab("date")+ylab("pagerank")+
geom_smooth(method='lm')+
coord_cartesian(
xlim = as.Date(c('2005-01-01', '2019-01-01'))
ylim = c(0, 0.3)
)
plotArticlesByPagerank_DatePagerank
plotArticlesByPagerank_DatePagerank <- ggplot(getArticlesByPagerank, aes(x=as.Date(date),y=pagerank))+
geom_point()+
xlab("date")+ylab("pagerank")+
geom_smooth(method='lm')+
coord_cartesian(
xlim = as.Date(c('2005-01-01', '2019-01-01')),
ylim = c(0, 0.3)
)
plotArticlesByPagerank_DatePagerank
plotArticlesByPagerank_DatePagerank <- ggplot(getArticlesByPagerank, aes(x=as.Date(date),y=pagerank))+
geom_point()+
xlab("date")+ylab("pagerank")+
geom_smooth(method='lm')+
coord_cartesian(
xlim = as.Date(c('2005-01-01', '2019-01-01')),
ylim = c(min(pagerank), 0.3)
)
plotArticlesByPagerank_DatePagerank
plotArticlesByPagerank_DatePagerank <- ggplot(getArticlesByPagerank, aes(x=as.Date(date),y=pagerank))+
geom_point()+
xlab("date")+ylab("pagerank")+
geom_smooth(method='lm')+
coord_cartesian(
xlim = as.Date(c('2005-01-01', '2019-01-01')),
ylim = c(0.15, 0.3)
)
plotArticlesByPagerank_DatePagerank
plotArticlesByPagerank_DatePagerank <- ggplot(getArticlesByPagerank, aes(x=as.Date(date),y=pagerank))+
geom_point()+
xlab("date")+ylab("pagerank")+
geom_smooth(method='lm')+
coord_cartesian(
xlim = as.Date(c('2005-01-01', '2019-01-01')),
ylim = c(0.15, 0.2)
)
plotArticlesByPagerank_DatePagerank <- ggplot(getArticlesByPagerank, aes(x=as.Date(date),y=pagerank))+
geom_point()+
xlab("date")+ylab("pagerank")+
geom_smooth(method='lm')+
coord_cartesian(
xlim = as.Date(c('2005-01-01', '2019-01-01')),
ylim = c(0.15, 0.2)
)
plotArticlesByPagerank_DatePagerank
?lubridate
plotArticlesByPagerank_DatePagerank <- ggplot(getArticlesByPagerank, aes(x=floor_date(date,unit="year"),y=pagerank))+
geom_violin()+
xlab("date")+ylab("pagerank")+
# geom_smooth(method='lm')+
coord_cartesian(
xlim = as.Date(c('2005-01-01', '2019-01-01')),
ylim = c(0.15, 0.2)
)
plotArticlesByPagerank_DatePagerank
plotArticlesByPagerank_DatePagerank <- ggplot(getArticlesByPagerank, aes(x=floor_date(as.Date(date),unit="year"),y=pagerank))+
geom_violin()+
xlab("date")+ylab("pagerank")+
# geom_smooth(method='lm')+
coord_cartesian(
xlim = as.Date(c('2005-01-01', '2019-01-01')),
ylim = c(0.15, 0.2)
)
plotArticlesByPagerank_DatePagerank
plotArticlesByPagerank_DatePagerank <- ggplot(getArticlesByPagerank, aes(x=year(as.Date(date)),y=pagerank))+
geom_violin()+
xlab("date")+ylab("pagerank")+
# geom_smooth(method='lm')+
coord_cartesian(
xlim = as.Date(c('2005-01-01', '2019-01-01')),
ylim = c(0.15, 0.2)
)
plotArticlesByPagerank_DatePagerank
plotArticlesByPagerank_DatePagerank <- ggplot(
getArticlesByPagerank,
aes(x=as.factor(year(as.Date(date))),y=pagerank))+
geom_violin()+
xlab("date")+ylab("pagerank")+
# geom_smooth(method='lm')+
coord_cartesian(
xlim = as.Date(c('2005-01-01', '2019-01-01')),
ylim = c(0.15, 0.2)
)
plotArticlesByPagerank_DatePagerank
plotArticlesByPagerank_DatePagerank <- ggplot(
getArticlesByPagerank,
aes(x=as.factor(year(as.Date(date))),y=pagerank))+
geom_violin()+
xlab("date")+ylab("pagerank")+
# geom_smooth(method='lm')+
coord_cartesian(
# xlim = as.Date(c('2005-01-01', '2019-01-01')),
# ylim = c(0.15, 0.2)
)
plotArticlesByPagerank_DatePagerank
plotArticlesByPagerank_DatePagerank <- ggplot(
getArticlesByPagerank,
aes(x=as.factor(year(as.Date(date))),y=pagerank))+
geom_violin()+
xlab("date")+ylab("pagerank")+
# geom_smooth(method='lm')+
coord_cartesian(
xlim = c(2005, 2019),
ylim = c(0.15, 0.2)
)
plotArticlesByPagerank_DatePagerank
plotArticlesByPagerank_DatePagerank <- ggplot(
getArticlesByPagerank,
aes(x=as.factor(year(as.Date(date))),y=pagerank))+
geom_violin()+
xlab("date")+ylab("pagerank")+
# geom_smooth(method='lm')+
coord_cartesian(
xlim = as.Date(c('2005-01-01', '2019-01-01')),
ylim = c(0.15, 0.2)
)
plotArticlesByPagerank_DatePagerank
plotArticlesByPagerank_DatePagerank <- ggplot(
getArticlesByPagerank,
aes(x=as.factor(year(as.Date(date))),y=pagerank))+
geom_violin()+
xlab("date")+ylab("pagerank")+
# geom_smooth(method='lm')+
coord_cartesian(
xlim = year(c('2005-01-01', '2019-01-01')),
ylim = c(0.15, 0.2)
)
plotArticlesByPagerank_DatePagerank
plotArticlesByPagerank_DatePagerank <- ggplot(
getArticlesByPagerank,
aes(x=as.factor(year(as.Date(date))),y=pagerank))+
geom_violin()+
xlab("date")+ylab("pagerank")+
# geom_smooth(method='lm')+
coord_cartesian(
xlim = year(as.Date(c('2005-01-01', '2019-01-01'))),
ylim = c(0.15, 0.2)
)
plotArticlesByPagerank_DatePagerank
plotArticlesByPagerank_DatePagerank <- ggplot(
getArticlesByPagerank,
aes(x=as.factor(year(as.Date(date))),y=pagerank))+
geom_violin()+
xlab("date")+ylab("pagerank")+
# geom_smooth(method='lm')+
coord_cartesian(
xlim = as.factor(year(as.Date(c('2005-01-01', '2019-01-01')))),
ylim = c(0.15, 0.2)
)
plotArticlesByPagerank_DatePagerank
plotArticlesByPagerank_DatePagerank <- ggplot(
getArticlesByPagerank,
aes(x=as.factor(year(as.Date(date))),y=pagerank))+
geom_violin()+
xlab("date")+ylab("pagerank")+
# geom_smooth(method='lm')+
coord_cartesian(
#    xlim = as.factor(year(as.Date(c('2005-01-01', '2019-01-01')))),
ylim = c(0.15, 0.2)
)
plotArticlesByPagerank_DatePagerank
plotArticlesByPagerank_DatePagerank <- ggplot(
getArticlesByPagerank,
aes(x=as.factor(year(as.Date(date))),y=pagerank))+
geom_violin(na.rm = TRUE, scale = count)+
xlab("date")+ylab("pagerank")+
# geom_smooth(method='lm')+
coord_cartesian(
#    xlim = as.factor(year(as.Date(c('2005-01-01', '2019-01-01')))),
ylim = c(0.15, 0.2)
)
plotArticlesByPagerank_DatePagerank
plotArticlesByPagerank_DatePagerank <- ggplot(
getArticlesByPagerank,
aes(x=as.factor(year(as.Date(date))),y=pagerank))+
geom_violin(na.rm = TRUE, scale = "count")+
xlab("date")+ylab("pagerank")+
# geom_smooth(method='lm')+
coord_cartesian(
#    xlim = as.factor(year(as.Date(c('2005-01-01', '2019-01-01')))),
ylim = c(0.15, 0.2)
)
plotArticlesByPagerank_DatePagerank
plotArticlesByPagerank_DatePagerank <- ggplot(
getArticlesByPagerank,
aes(x=as.factor(year(as.Date(date))),y=pagerank))+
geom_violin(na.rm = TRUE, scale = "count")+
xlab("date")+ylab("pagerank")+
# geom_smooth(method='lm')+
coord_cartesian(
#    xlim = as.factor(year(as.Date(c('2005-01-01', '2019-01-01')))),
ylim = c(0.15, 0.175)
)
plotArticlesByPagerank_DatePagerank
plotArticlesByPagerank_DatePagerank <- ggplot(
getArticlesByPagerank,
aes(x=as.factor(year(as.Date(date))),y=pagerank))+
geom_violin(na.rm = TRUE, scale = "count")+
xlab("date")+ylab("pagerank")+
# geom_smooth(method='lm')+
coord_cartesian(
#    xlim = as.factor(year(as.Date(c('2005-01-01', '2019-01-01')))),
ylim = c(0.15, 0.175)
)
plotArticlesByPagerank_DatePagerank
source('~/Git/working-drafts/literature-review/src/main/R/present.R')
ggplot(topicAuthorCommunityXmap, aes(x=as.factor(topic), y=authorCommunity, fill=totalScore)) +
geom_tile(colour = "white") +
scale_fill_gradient(low = "white",high = "green") +
xlab("topic") + ylab("author community")
library(tidyverse)
library(reshape2)
library(cowplot)
library(lubridate)
library(huxtable)
ggplot(articleGroupAuthorCommunityXmap , aes(x=articleGroup, y=authorCommunity, fill=totalScore)) +
geom_tile(colour = "white") +
scale_fill_gradient(low = "white",high = "orange") +
xlab("topic") + ylab("author community")
ggplot(topicAuthorCommunityXmap, aes(x=as.factor(topic), y=authorCommunity, fill=totalScore)) +
geom_tile(colour = "white") +
scale_fill_gradient(low = "white",high = "green") +
xlab("topic") + ylab("author community")
ggplot(topicArticleGroupXmap, aes(x=as.factor(topic), y=articleGroup, fill=totalScore)) +
geom_tile(colour = "white") +
scale_fill_gradient(low = "white",high = "steelblue") +
xlab("topic") + ylab("article group")
?dbConnect
library(DBI)
library(odbc)
library(datasets)
library(dplyr)
library(reshape2)
?dbConnect
install.packages("RMySQL")
library(RMySQL)
library(DBI)
# install.packages("RMySQL")
# sudo apt-get install r-cran-rmysql
library(RMySQL)
library(datasets)
library(dplyr)
library(reshape2)
pwd <- readline(prompt="Enter DB pw: ");
con <- dbConnect(MySQL(),
host = "cook.ex.ac.uk",
dbname = "CPRDTest",
user = "rc538",
password = pwd,
port = 3306);
dbListTables(con);
med_code_sets <- dbReadTable(con, "MedCodeSets");
View(med_code_sets)
rs <- dbSendQuery(con, "SELECT * FROM Patient LIMIT 0,50")
patients <- fetch(rs, n=-1)
View(patients)
dbDisconnect(con)
library(DBI)
# install.packages("RMySQL")
# sudo apt-get install r-cran-rmysql
library(RMySQL)
library(datasets)
library(dplyr)
library(reshape2)
con <- dbConnect(MySQL(),
host = "cook.ex.ac.uk",
dbname = "CPRDTest",
user = "testuser",
password = "test123",
port = 3306);
dbListTables(con);
med_code_sets <- dbReadTable(con, "MedCodeSets");
View(med_code_sets)
rs <- dbSendQuery(con, "SELECT * FROM Patient LIMIT 0,50")
patients <- fetch(rs, n=-1)
View(patients)
dbDisconnect(con)
library(roxygen2)
document()
library(devtools)
document()
getwd()
setwd("Git/etl-analysis/r-packages/phdUtils/")
document()
?saveSixthPageFigure
library(standardPrintOutput)
?saveSixthPageFigure
